apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

android {
    namespace 'rocks.georgik.sdlapp'
    compileSdkVersion = 35
    version = '1.2-dev'

    defaultConfig {
        applicationId = 'io.github.libresprite'
        minSdkVersion 21
        targetSdkVersion 35
    }

    productFlavors {
        flavorDimensions = ['abi']

        arm {
            ndk {
                abiFilter 'armeabi-v7a'
            }
        }
        arm64 {
            ndk {
                abiFilter 'arm64-v8a'
            }
        }
        x86 {
            ndk {
                abiFilter 'x86'
            }
        }
        x86_64 {
            ndk {
                abiFilter 'x86_64'
            }
        }
        all_in_one {
            ndk {
                //abiFilter 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
    }
    signingConfigs {
        release {
            storeFile file("keystore-path")
            storePassword "keystore-pass"
            keyAlias "alias"
            keyPassword "alias-password"

            // Optional, specify signing versions used
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.txt'))
            // Uncomment to enable apk signing (and also fill details in signingConfigs Block)
            // signingConfig signingConfigs.release
        }
    }



    externalNativeBuild {
        cmake {
            path "../main/CMakeLists.txt"
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}


tasks.register('copyFiles', Copy) {
    from file("../../data")
    into file("src/main/assets/data")
}

preBuild.dependsOn(copyFiles)